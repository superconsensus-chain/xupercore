syntax = "proto3";

option go_package = "github.com/superconsensus-chain/xupercore/protos";

package protos;

// GovernTokenBalance
message GovernTokenBalance {
    string total_balance = 1;
    string available_balance_for_tdpos = 2;
    string locked_balance_for_tdpos = 3;
    string available_balance_for_proposal = 4;
    string locked_balance_for_proposal = 5;
}

// TriggerDesc
message TriggerDesc {
    int64 height = 1;
    string module = 2;
    string method = 3;
    map<string, bytes> args = 4;
}

enum ProposalStatus {
    VOTING = 0;
    SUCCESS = 1;
    FAILURE = 2;
    CANCELED = 3;
}

// Proposal
message Proposal {
    string module = 1;
    string method = 2;
    map<string, bytes> args = 3;
    TriggerDesc trigger = 4;

    string vote_amount = 5;
    ProposalStatus status = 6;
    string proposer = 7;
}

message ProposalRatio{
    map<string,int64> user_ratio = 1;
}

//冻结资产记录表
message FrozenAssetsTable {
    string total = 1;
    //repeated FrozenDetails  frozendetail = 2;
    map<string , FrozenDetails> frozen_detail = 2;
    //repeated FrozenDetails  thawdetail = 3;
    map<string, FrozenDetails> thaw_detail = 3;
    int64 timestamp = 4;
}
message FrozenDetails {
    // string txid = 1;
    int64 height = 1;
    string amount = 2;
    int64 timestamp = 3;
    //是否已经解冻
    // bool isthaw = 3;
}

message NodeDetails {
    repeated NodeDetail node_detail =1;
}

message NodeDetail{
    string address = 1;
    int64 height = 2;
    string amount = 3;
    //string address = 4;
}

//节点待解冻的信息
message NodeTable{
    map<int64,NodeDetails> node_details =1;
}

//投票提名记录表
message CandidateRatio{
    //总票数
    string tatal_vote = 1;
    //分红比率
    int64 Ratio = 2;
    //投票的人
    map<string,string> voting_user = 3;
    //是否是提名人(取消此提名人后数据不能删除，通过标志位修改)
    bool is_Nominate = 4;
    //我投票的人
    map<string,string> my_voting = 5;
    //已使用的总票数
    string used = 6;
    //被投票的总票数
    string be_voted_total = 7;
    //提名候选人记录
    map<string,NominateDetails> nominate_details = 8;
}

//缓存表，产块分红读取这个
message CacheVoteCandidate{
    //分红比率
    int64 ratio = 1;
    //投票的人
    map<string , string> voting_user = 2;
    //总票数
    string total_vote = 3;
}

//纪录所有提名人，每轮开始的时候用于更新缓存表
message AllCandidate{
    map<string,string> candidate = 1;
    //全网冻结资产
    string freemonry = 2;
    //冻结百分比
    string percentage =3;
}

message NominateDetails {
    //抵押的资产
    string amount = 1;
    //是否取消提名
    bool isnominate = 2;
}

